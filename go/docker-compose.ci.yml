services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: saas_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    image: go-app:ci
    build:
      context: .
      dockerfile: Dockerfile
    # Ensure any volumes defined in the development compose file are
    # removed when merging this CI file. Setting an empty array tells
    # Compose there are no volumes for this service (overrides dev bind).
    volumes: []
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["./bin/server"]
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

