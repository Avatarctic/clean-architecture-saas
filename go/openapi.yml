openapi: 3.0.3
info:
  title: Clean Architecture SaaS API
  version: 1.0.0
  description: |
    Minimal OpenAPI v3 description for the Clean Architecture SaaS example.
    This file is a starting point generated from the project's HTTP handlers.
servers:
  - url: http://localhost:8080
paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
  /metrics:
    get:
      summary: Prometheus metrics (text/plain)
      responses:
        '200':
          description: Prometheus metrics
          content:
            text/plain: {}
  /api/v1/auth/login:
    post:
      summary: Login with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokens'
        '401':
          description: Unauthorized
  /api/v1/auth/refresh:
    post:
      summary: Refresh access token using refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
      responses:
        '200':
          description: Tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokens'
  /api/v1/auth/logout:
    post:
      summary: Logout (protected)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: logged out
  /api/v1/users:
    get:
      summary: List users for tenant (protected)
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: offset
          schema:
            type: integer
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
    post:
      summary: Create user (protected)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/users/me:
    get:
      summary: Get own profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/users/{id}:
    get:
      summary: Get user by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
  /api/v1/users/{id}/password:
    post:
      summary: Change password
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          description: Password changed
  /api/v1/auth/verify-email:
    get:
      summary: Verify email (GET link)
      parameters:
        - in: query
          name: token
          schema:
            type: string
      responses:
        '200':
          description: HTML success page
          content:
            text/html: {}
    post:
      summary: Verify email (API)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
      responses:
        '200':
          description: JSON success
  /api/v1/auth/resend-verification:
    post:
      summary: Resend verification email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendVerificationRequest'
      responses:
        '200':
          description: Verification email queued
  /api/v1/auth/confirm-email-update:
    get:
      summary: Confirm email update (GET link)
      parameters:
        - in: query
          name: token
          schema:
            type: string
      responses:
        '200':
          description: HTML success page
          content:
            text/html: {}
    post:
      summary: Confirm email update (API)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmEmailUpdateRequest'
      responses:
        '200':
          description: JSON success
  /api/v1/tenants:
    get:
      summary: List tenants
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: offset
          schema:
            type: integer
      responses:
        '200':
          description: Tenants list
          content:
            application/json:
              schema:
                type: object
                properties:
                  tenants:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tenant'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
    post:
      summary: Create tenant
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantRequest'
      responses:
        '201':
          description: Created tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
  /api/v1/tenants/{id}:
    get:
      summary: Get tenant by id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
    put:
      summary: Update tenant
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenantRequest'
      responses:
        '200':
          description: Updated tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tenant'
  /api/v1/tenants/{id}/users:
    post:
      summary: Create user in tenant (admin)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/features:
    get:
      summary: List feature flags
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Feature flags list
    post:
      summary: Create feature flag
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeatureFlagRequest'
      responses:
        '201':
          description: Created feature flag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlag'
  /api/v1/features/evaluate:
    post:
      summary: Evaluate a feature flag for current user/tenant
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluateFeatureFlagRequest'
      responses:
        '200':
          description: Evaluation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
                  value:
                    type: string
  /api/v1/audit/logs:
    get:
      summary: Query audit logs
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditLogFilter'
      responses:
        '200':
          description: Audit logs
          content:
            application/json:
              schema:
                type: object
                properties:
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/AuditLog'
                  total:
                    type: integer
  /api/v1/permissions:
    get:
      summary: Get available permissions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Permissions list
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
        timestamp:
          type: string
        version:
          type: string
        service:
          type: string
        dependencies:
          type: object
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string
    AuthTokens:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        expires_in:
          type: integer
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        role:
          type: string
        tenant_id:
          type: string
        is_active:
          type: boolean
        email_verified:
          type: boolean
        audit_enabled:
          type: boolean
        last_login_at:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
    CreateUserRequest:
      type: object
      required: [email, password, first_name, last_name, role]
      properties:
        email:
          type: string
        password:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        role:
          type: string
        audit_enabled:
          type: boolean
    UpdateUserRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        role:
          type: string
        is_active:
          type: boolean
        audit_enabled:
          type: boolean
    ChangePasswordRequest:
      type: object
      required: [old_password, new_password]
      properties:
        old_password:
          type: string
        new_password:
          type: string
    VerifyEmailRequest:
      type: object
      required: [token]
      properties:
        token:
          type: string
    ResendVerificationRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
    ConfirmEmailUpdateRequest:
      type: object
      required: [token]
      properties:
        token:
          type: string
    Tenant:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slug:
          type: string
        domain:
          type: string
        plan:
          type: string
        status:
          type: string
        settings:
          type: object
        created_at:
          type: string
        updated_at:
          type: string
    CreateTenantRequest:
      type: object
      required: [name, slug, plan, settings, admin_user]
      properties:
        name:
          type: string
        slug:
          type: string
        domain:
          type: string
        plan:
          type: string
        settings:
          type: object
        admin_user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
            first_name:
              type: string
            last_name:
              type: string
    UpdateTenantRequest:
      type: object
      properties:
        name:
          type: string
        slug:
          type: string
        domain:
          type: string
        plan:
          type: string
        status:
          type: string
        settings:
          type: object
    CreateFeatureFlagRequest:
      type: object
      required: [key]
      properties:
        key:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        conditions:
          type: object
    FeatureFlag:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        created_at:
          type: string
        updated_at:
          type: string
    EvaluateFeatureFlagRequest:
      type: object
      required: [key]
      properties:
        key:
          type: string
        custom:
          type: object
        return_value:
          type: boolean
    AuditLogFilter:
      type: object
      properties:
        tenant_id:
          type: string
        user_id:
          type: string
        action:
          type: string
        resource:
          type: string
        limit:
          type: integer
        offset:
          type: integer
    AuditLog:
      type: object
      properties:
        id:
          type: string
        tenant_id:
          type: string
        user_id:
          type: string
        action:
          type: string
        resource:
          type: string
        details:
          type: object
        created_at:
          type: string
